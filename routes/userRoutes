const express = require('express');
const userRouter = express.Router();
const userController = require('../controller/userController');
const authMiddleware = require("./authMiddleware")

userRouter.get('/getUsers', authMiddleware.authenticate, userController.getUsers);
userRouter.get('/getUserById/:id', authMiddleware.authenticate, userController.getUserById);
userRouter.post('/signUp', userController.postSignUp);
userRouter.post('/login',userController.postLogin);
userRouter.post('/addProduct',authMiddleware.authenticate, userController.postAddProduct);
userRouter.get('/getProducts',authMiddleware.authenticate, userController.getProducts);
userRouter.get('/getProductById/:id',authMiddleware.authenticate, userController.getProductById);
userRouter.post('/updateProduct/:id',authMiddleware.authenticate,userController.updateProduct);
userRouter.delete('/deleteProduct/:id',authMiddleware.authenticate, userController.deleteProduct);
userRouter.get('/filteredProducts',authMiddleware.authenticate, userController.getFilteredProducts);
userRouter.patch('/updateStock/:id',authMiddleware.authenticate,userController.updateStock)
userRouter.post('/updatePrice/:id',authMiddleware.authenticate, userController.updatePrice)
userRouter.get('/getLowStockProducts',authMiddleware.authenticate, userController.getLowStockProducts);
userRouter.post('/placeOrder/:id',authMiddleware.authenticate,userController.placeOrder);
userRouter.get('/viewOrders',authMiddleware.authenticate, userController.viewOrders);
userRouter.post('/updateOrderStatus/:id',authMiddleware.authenticate, userController.updateOrderStatus);
userRouter.get('/getReturnRequests',userController.getReturnRequests);
userRouter.post('/manageReturnRequest/:id', userController.manageReturnRequest);

module.exports = userRouter;